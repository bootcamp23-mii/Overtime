/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.EmployeeController;
import controllers.EmployeeControllerInterface;
import controllers.OvertimeController;
import controllers.OvertimeControllerInterface;
import controllers.TimeSheetController;
import controllers.TimeSheetControllerInterface;
import daos.GeneralDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Employee;
import models.Overtime;
import models.Sessions;
import models.TimeSheet;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.view.JasperViewer;
import org.hibernate.SessionFactory;
import org.hibernate.engine.jdbc.connections.spi.ConnectionProvider;
import tools.HibernateUtil;

/**
 *
 * @author AdhityaWP
 */
public class ManagerMainView extends javax.swing.JInternalFrame {

    SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
    DefaultTableModel myTableModel = new DefaultTableModel();
    OvertimeControllerInterface oci = new OvertimeController(sessionFactory);
    EmployeeControllerInterface eci = new EmployeeController(sessionFactory);
    TimeSheetControllerInterface tsci = new TimeSheetController(sessionFactory);
    GeneralDAO<Employee> gdao = new GeneralDAO(sessionFactory, Employee.class);

    JasperReport JasRep;
    JasperPrint JasPri;
    Map<String, Object> param = new HashMap<>();
    JasperDesign JasDes;
    Connection c;
    String id = Sessions.getId();
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd MMM yyyy");
    SimpleDateFormat reFormat = new SimpleDateFormat("YYYY-MM-DD HH24:mm:SS");

    /**
     * Creates new form ManagerView
     */
    public ManagerMainView() {
        initComponents();
        Employee u = eci.getById(id);
        lblNik.setText(u.getId());
        lblUsername.setText(u.getName());
        lblmanage.setText(u.getManager().getName());
        tableData(gdao.getByKarByMang(id));
        setukuran();
    }

    private void setukuran() {
        this.setSize(670, 540);
    }

    private void tableData(List<Employee> emp) {
        Object[] columnNames = {"Nomor", "Nama", "Id Emp", "Overtime Date", "Duration", "Status"};
        Object[][] data = new Object[emp.size()][columnNames.length];
        for (int i = 0; i < data.length; i++) {
            for (Overtime overtime : (eci.getById(emp.get(i).getId())).getTimeSheetList().get(i).getOvertimeList()) {
                data[i][0] = i + 1;
                data[i][1] = overtime.getTimeSheet().getEmployee().getName();
                data[i][2] = overtime.getTimeSheet().getEmployee().getId();
                data[i][3] = overtime.getOvertimeDate();
                data[i][4] = overtime.getTimeDuration();
                data[i][5] = overtime.getStatus().getStatus();
            }
        }
        myTableModel = new DefaultTableModel(data, columnNames);
        tbManager.setModel(myTableModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnManagerMain = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblSubTitle = new javax.swing.JLabel();
        spMain = new javax.swing.JSeparator();
        pnUser = new javax.swing.JPanel();
        lblNik = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblmanagedby = new javax.swing.JLabel();
        lblmanage = new javax.swing.JLabel();
        spTableManager = new javax.swing.JScrollPane();
        tbManager = new javax.swing.JTable();
        btApprove = new javax.swing.JButton();
        tfId = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        tfDate = new javax.swing.JTextField();
        tfCount = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblCount = new javax.swing.JLabel();
        btPrint = new javax.swing.JButton();
        lblTimeSheet = new javax.swing.JLabel();
        tfImeSheet = new javax.swing.JTextField();
        tfStatus = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfKeterangan = new javax.swing.JTextField();
        btReject = new javax.swing.JButton();
        btClear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btsend = new javax.swing.JButton();
        tfEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        tfIdEmp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        cbMonth = new javax.swing.JComboBox<>();
        lblyear = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        lblReport = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Manager Main");

        pnManagerMain.setBackground(new java.awt.Color(199, 220, 236));

        lblTitle.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lblTitle.setText("OVERTIME REQUEST");

        lblSubTitle.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblSubTitle.setText("Mitra Integrasi Informatika");

        pnUser.setBackground(new java.awt.Color(199, 200, 239));

        lblNik.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        lblNik.setText("NIK");

        lblUsername.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblUsername.setText("Username");

        lblmanagedby.setText("Managed By");

        lblmanage.setText("UserManag");

        javax.swing.GroupLayout pnUserLayout = new javax.swing.GroupLayout(pnUser);
        pnUser.setLayout(pnUserLayout);
        pnUserLayout.setHorizontalGroup(
            pnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblmanage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNik, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnUserLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblmanagedby)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnUserLayout.setVerticalGroup(
            pnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnUserLayout.createSequentialGroup()
                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblmanagedby)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblmanage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbManagerMouseClicked(evt);
            }
        });
        spTableManager.setViewportView(tbManager);

        btApprove.setText("Approve");
        btApprove.setEnabled(false);
        btApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btApproveActionPerformed(evt);
            }
        });

        tfId.setEditable(false);

        tfName.setEditable(false);

        tfDate.setEditable(false);

        tfCount.setEditable(false);

        lblId.setText("Id OT");

        lblName.setText("Name");

        lblDate.setText("Date");

        lblCount.setText("Duration");

        btPrint.setText("Print Report");
        btPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrintActionPerformed(evt);
            }
        });

        lblTimeSheet.setText("TimeSheet");

        tfImeSheet.setEditable(false);

        tfStatus.setEditable(false);

        jLabel1.setText("Status");

        jLabel2.setText("Keterangan");

        tfKeterangan.setEditable(false);

        btReject.setText("Reject");
        btReject.setEnabled(false);
        btReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRejectActionPerformed(evt);
            }
        });

        btClear.setText("Clear");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });

        btsend.setText("Send Email");
        btsend.setEnabled(false);
        btsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsendActionPerformed(evt);
            }
        });

        lblEmail.setText("Email");

        tfIdEmp.setEnabled(false);

        jLabel4.setText("Id Emp");

        cbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));

        cbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMonthActionPerformed(evt);
            }
        });

        lblyear.setText("Year");

        lblMonth.setText("Month");

        lblReport.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblReport.setText("Report");

        javax.swing.GroupLayout pnManagerMainLayout = new javax.swing.GroupLayout(pnManagerMain);
        pnManagerMain.setLayout(pnManagerMainLayout);
        pnManagerMainLayout.setHorizontalGroup(
            pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnManagerMainLayout.createSequentialGroup()
                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spMain, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnManagerMainLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDate)
                            .addComponent(lblCount)
                            .addComponent(lblName)
                            .addComponent(lblId))
                        .addGap(22, 22, 22)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnManagerMainLayout.createSequentialGroup()
                                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfDate, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(tfName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCount))
                                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnManagerMainLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnManagerMainLayout.createSequentialGroup()
                                                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblTimeSheet)
                                                    .addComponent(jLabel1))
                                                .addGap(6, 6, 6))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tfKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(tfStatus, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tfImeSheet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(pnManagerMainLayout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(btClear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btApprove)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btReject)))
                                .addGap(30, 30, 30)
                                .addComponent(pnUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnManagerMainLayout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(38, 38, 38)
                                .addComponent(lblSubTitle)
                                .addGap(84, 84, 84))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnManagerMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spTableManager))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnManagerMainLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnManagerMainLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblReport)
                                .addGap(18, 18, 18)
                                .addComponent(lblMonth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(lblyear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btPrint))
                            .addComponent(jSeparator1)))
                    .addGroup(pnManagerMainLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btsend)))
                .addContainerGap())
        );
        pnManagerMainLayout.setVerticalGroup(
            pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnManagerMainLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubTitle)
                    .addComponent(lblTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spMain, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnManagerMainLayout.createSequentialGroup()
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTimeSheet)
                            .addComponent(tfImeSheet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btApprove)
                            .addComponent(btReject)
                            .addComponent(btClear)))
                    .addGroup(pnManagerMainLayout.createSequentialGroup()
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCount)))
                    .addComponent(pnUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPrint)
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblyear)
                    .addComponent(lblMonth)
                    .addComponent(lblReport))
                .addGap(13, 13, 13)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(pnManagerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btsend)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(tfIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTableManager, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnManagerMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnManagerMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsendActionPerformed
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.transport.protocol", "smtp");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");

        Session session = Session.getDefaultInstance(props);
        try {
            InternetAddress fromAddress = new InternetAddress("lgg121770@gmail.com");
            InternetAddress toAddress = new InternetAddress(tfEmail.getText());

            Message message = new MimeMessage(session);
            message.setFrom(fromAddress);
            message.setRecipient(Message.RecipientType.TO, toAddress);
            message.setSubject("Overtime");
            message.setText("Halo" + tfIdEmp.getText() + "\nOvertime Anda pada " + tfDate.getText() + " adalah " + tfCount.getText() + "jam\nStatus pengajuan : " + tfStatus.getText() + ".");
            Transport.send(message, "lgg121770@gmail.com", "123Q123Q@");
            JOptionPane.showMessageDialog(null, "Berhasil kirim Email!");
        } catch (MessagingException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btsendActionPerformed

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        tfId.setText("");
        tfName.setText("");
        tfDate.setText("");
        tfCount.setText("");
        tfKeterangan.setText("");
        tfImeSheet.setText("");
        tfStatus.setText("");
        tfIdEmp.setText("");
        tfEmail.setText("");
        btsend.setEnabled(false);
        btApprove.setEnabled(false);
        btReject.setEnabled(false);
    }//GEN-LAST:event_btClearActionPerformed

    private void btRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRejectActionPerformed

        int reply = JOptionPane.showConfirmDialog(null, "Are You Sure Want to Reject this Overtime?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (reply == JOptionPane.YES_OPTION) {
            String id = tfId.getText();
            String date = tfDate.getText();
            String duration = tfCount.getText();
            String keterangan = tfKeterangan.getText();
            String timesheet = tfImeSheet.getText();
            String status = tfStatus.getText();
            if (status.equals("Submitted")) {
                oci.update(id, date, duration, keterangan, "S02", timesheet);
                JOptionPane.showMessageDialog(null, "Rejected!");
            } else {
                JOptionPane.showMessageDialog(null, "Cant Reject!");
            }
        }
        tableData(gdao.getByKarByMang(id));
    }//GEN-LAST:event_btRejectActionPerformed

    private void selectedCbMonth() {
        if (cbMonth.getSelectedItem().toString().equals("January")) {
            param.put("pmMonth", "1");
        } else if (cbMonth.getSelectedItem().toString().equals("February")) {
            param.put("pmMonth", "2");
        } else if (cbMonth.getSelectedItem().toString().equals("March")) {
            param.put("pmMonth", "3");
        } else if (cbMonth.getSelectedItem().toString().equals("April")) {
            param.put("pmMonth", "4");
        } else if (cbMonth.getSelectedItem().toString().equals("May")) {
            param.put("pmMonth", "5");
        } else if (cbMonth.getSelectedItem().toString().equals("June")) {
            param.put("pmMonth", "6");
        } else if (cbMonth.getSelectedItem().toString().equals("July")) {
            param.put("pmMonth", "7");
        } else if (cbMonth.getSelectedItem().toString().equals("August")) {
            param.put("pmMonth", "8");
        } else if (cbMonth.getSelectedItem().toString().equals("September")) {
            param.put("pmMonth", "9");
        } else if (cbMonth.getSelectedItem().toString().equals("October")) {
            param.put("pmMonth", "10");
        } else if (cbMonth.getSelectedItem().toString().equals("November")) {
            param.put("pmMonth", "11");
        } else if (cbMonth.getSelectedItem().toString().equals("December")) {
            param.put("pmMonth", "12");
        } else {
            JOptionPane.showMessageDialog(null, "Select a Month first!");
        }
    }

    private void btPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrintActionPerformed
        selectedCbMonth();
        param.put("pmId", id);
        param.put("pmName", lblUsername.getText());
        param.put("pmYear", cbYear.getSelectedItem().toString());
        try {
            c = sessionFactory.getSessionFactoryOptions().getServiceRegistry().
                    getService(ConnectionProvider.class).getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerMainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            String fileName = "./src/reports/reportManager.jrxml";
            String filetoFill = "./src/reports/reportManager.jasper";
            JasperCompileManager.compileReport(fileName);
            JasPri = JasperFillManager.fillReport(filetoFill, param, c);
            JasperViewer.viewReport(JasPri, false);

        } catch (JRException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btPrintActionPerformed

    private void btApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btApproveActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are You Sure Want to Approve this Overtime?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (reply == JOptionPane.YES_OPTION) {
            String id = tfId.getText();
            String date = tfDate.getText();
            String duration = tfCount.getText();
            String keterangan = tfKeterangan.getText();
            String timesheet = tfImeSheet.getText();
            String status = tfStatus.getText();
            if (status.equals("Submitted")) {
                oci.update(id, date, duration, keterangan, "S01", timesheet);
                JOptionPane.showMessageDialog(null, "Success for approve!");
            } else {
                JOptionPane.showMessageDialog(null, "Cant approve!");
            }
        }
        tableData(gdao.getByKarByMang(id));
    }//GEN-LAST:event_btApproveActionPerformed

    private void tbManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbManagerMouseClicked
        String idemp = tbManager.getValueAt(tbManager.getSelectedRow(), 2).toString();
        tfIdEmp.setText(idemp);
        tfEmail.setText((eci.getById(idemp)).getEmail());
        tfName.setText(tbManager.getValueAt(tbManager.getSelectedRow(), 1).toString());
        tfDate.setText(tbManager.getValueAt(tbManager.getSelectedRow(), 3).toString());
        tfCount.setText(tbManager.getValueAt(tbManager.getSelectedRow(), 4).toString());
        tfStatus.setText(tbManager.getValueAt(tbManager.getSelectedRow(), 5).toString());
        for (TimeSheet ts : (eci.getById(idemp)).getTimeSheetList()) {
            tfImeSheet.setText(ts.getId());
            String tsid = ts.getId();
            for (Overtime ov : tsci.getByid(tsid).getOvertimeList()) {
                tfId.setText(ov.getId());
                tfKeterangan.setText(ov.getKeterangan());
            }
        }
        btApprove.setEnabled(true);
        btReject.setEnabled(true);
        btsend.setEnabled(true);
    }//GEN-LAST:event_tbManagerMouseClicked

    private void cbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMonthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btApprove;
    private javax.swing.JButton btClear;
    private javax.swing.JButton btPrint;
    private javax.swing.JButton btReject;
    private javax.swing.JButton btsend;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNik;
    private javax.swing.JLabel lblReport;
    private javax.swing.JLabel lblSubTitle;
    private javax.swing.JLabel lblTimeSheet;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblmanage;
    private javax.swing.JLabel lblmanagedby;
    private javax.swing.JLabel lblyear;
    private javax.swing.JPanel pnManagerMain;
    private javax.swing.JPanel pnUser;
    private javax.swing.JSeparator spMain;
    private javax.swing.JScrollPane spTableManager;
    private javax.swing.JTable tbManager;
    private javax.swing.JTextField tfCount;
    private javax.swing.JTextField tfDate;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfIdEmp;
    private javax.swing.JTextField tfImeSheet;
    private javax.swing.JTextField tfKeterangan;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfStatus;
    // End of variables declaration//GEN-END:variables
}
